{"cells":[{"cell_type":"code","execution_count":1,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":37563,"status":"ok","timestamp":1669783419629,"user":{"displayName":"Fan Chung Hung","userId":"00184248906926987457"},"user_tz":480},"id":"nZE2cEyIGpZ1","outputId":"2a457967-2e14-4d1a-b221-d15533bfa64b"},"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/gdrive\n"]}],"source":["from google.colab import drive\n","drive.mount('/content/gdrive')\n","data_path = '/content/gdrive/MyDrive/Final Dataset/articles/'"]},{"cell_type":"code","execution_count":2,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":293,"status":"ok","timestamp":1669783419918,"user":{"displayName":"Fan Chung Hung","userId":"00184248906926987457"},"user_tz":480},"id":"o9ZasUl6GwEV","outputId":"d818d701-f876-4bde-9ca1-222ec43ed0c4"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["['classes.txt', 'dataset.csv', 'articles.txt']"]},"metadata":{},"execution_count":2}],"source":["# Go to Shared With Me -> Final Dataset\n","# In the dropdown menu, press \"Add shortcut to Drive\" then choose MyDrive\n","import os\n","os.listdir('/content/gdrive/MyDrive/Final Dataset/articles/')\n","# This code cell should list out dataset files"]},{"cell_type":"code","execution_count":3,"metadata":{"executionInfo":{"elapsed":7434,"status":"ok","timestamp":1669783427349,"user":{"displayName":"Fan Chung Hung","userId":"00184248906926987457"},"user_tz":480},"id":"Gzq0z1srHVuA"},"outputs":[],"source":["import pandas as pd\n","import numpy as np\n","import re\n","article_data = pd.read_csv(data_path + 'dataset.csv')"]},{"cell_type":"code","execution_count":3,"metadata":{"executionInfo":{"elapsed":3,"status":"ok","timestamp":1669783427350,"user":{"displayName":"Fan Chung Hung","userId":"00184248906926987457"},"user_tz":480},"id":"U8E_67q_brC5"},"outputs":[],"source":["\n"]},{"cell_type":"code","execution_count":4,"metadata":{"executionInfo":{"elapsed":1693,"status":"ok","timestamp":1669783429040,"user":{"displayName":"Fan Chung Hung","userId":"00184248906926987457"},"user_tz":480},"id":"yNz8Y1Ckcekl"},"outputs":[],"source":["import torch\n","import torch.nn.functional as F"]},{"cell_type":"code","execution_count":5,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":22050,"status":"ok","timestamp":1669783451089,"user":{"displayName":"Fan Chung Hung","userId":"00184248906926987457"},"user_tz":480},"id":"Zn22qqkxkHYL","outputId":"253a710e-3ad5-473c-efca-8279b0afb74c"},"outputs":[{"output_type":"stream","name":"stdout","text":["Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Requirement already satisfied: tqdm in /usr/local/lib/python3.7/dist-packages (4.64.1)\n","Collecting boto3\n","  Downloading boto3-1.26.19-py3-none-any.whl (132 kB)\n","Requirement already satisfied: requests in /usr/local/lib/python3.7/dist-packages (2.23.0)\n","Requirement already satisfied: regex in /usr/local/lib/python3.7/dist-packages (2022.6.2)\n","Collecting sentencepiece\n","  Downloading sentencepiece-0.1.97-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (1.3 MB)\n","Collecting sacremoses\n","  Downloading sacremoses-0.0.53.tar.gz (880 kB)\n","Collecting botocore<1.30.0,>=1.29.19\n","  Downloading botocore-1.29.19-py3-none-any.whl (10.1 MB)\n","Collecting jmespath<2.0.0,>=0.7.1\n","  Downloading jmespath-1.0.1-py3-none-any.whl (20 kB)\n","Collecting s3transfer<0.7.0,>=0.6.0\n","  Downloading s3transfer-0.6.0-py3-none-any.whl (79 kB)\n","Requirement already satisfied: python-dateutil<3.0.0,>=2.1 in /usr/local/lib/python3.7/dist-packages (from botocore<1.30.0,>=1.29.19->boto3) (2.8.2)\n","Collecting urllib3<1.27,>=1.25.4\n","  Downloading urllib3-1.26.13-py2.py3-none-any.whl (140 kB)\n","Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.7/dist-packages (from python-dateutil<3.0.0,>=2.1->botocore<1.30.0,>=1.29.19->boto3) (1.15.0)\n","  Downloading urllib3-1.25.11-py2.py3-none-any.whl (127 kB)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.7/dist-packages (from requests) (2022.9.24)\n","Requirement already satisfied: idna<3,>=2.5 in /usr/local/lib/python3.7/dist-packages (from requests) (2.10)\n","Requirement already satisfied: chardet<4,>=3.0.2 in /usr/local/lib/python3.7/dist-packages (from requests) (3.0.4)\n","Requirement already satisfied: click in /usr/local/lib/python3.7/dist-packages (from sacremoses) (7.1.2)\n","Requirement already satisfied: joblib in /usr/local/lib/python3.7/dist-packages (from sacremoses) (1.2.0)\n","Building wheels for collected packages: sacremoses\n","  Building wheel for sacremoses (setup.py): started\n","  Building wheel for sacremoses (setup.py): finished with status 'done'\n","  Created wheel for sacremoses: filename=sacremoses-0.0.53-py3-none-any.whl size=895260 sha256=bd585639ca011052da36dd13d5ba5f21349797d62b32e26b18ba4241b740da7a\n","  Stored in directory: /root/.cache/pip/wheels/87/39/dd/a83eeef36d0bf98e7a4d1933a4ad2d660295a40613079bafc9\n","Successfully built sacremoses\n","Installing collected packages: urllib3, jmespath, botocore, s3transfer, sentencepiece, sacremoses, boto3\n","  Attempting uninstall: urllib3\n","    Found existing installation: urllib3 1.24.3\n","    Uninstalling urllib3-1.24.3:\n","      Successfully uninstalled urllib3-1.24.3\n","Successfully installed boto3-1.26.19 botocore-1.29.19 jmespath-1.0.1 s3transfer-0.6.0 sacremoses-0.0.53 sentencepiece-0.1.97 urllib3-1.25.11\n","Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Collecting transformers\n","  Downloading transformers-4.24.0-py3-none-any.whl (5.5 MB)\n","Collecting huggingface-hub<1.0,>=0.10.0\n","  Downloading huggingface_hub-0.11.1-py3-none-any.whl (182 kB)\n","Requirement already satisfied: requests in /usr/local/lib/python3.7/dist-packages (from transformers) (2.23.0)\n","Requirement already satisfied: pyyaml>=5.1 in /usr/local/lib/python3.7/dist-packages (from transformers) (6.0)\n","Collecting tokenizers!=0.11.3,<0.14,>=0.11.1\n","  Downloading tokenizers-0.13.2-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (7.6 MB)\n","Requirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.7/dist-packages (from transformers) (21.3)\n","Requirement already satisfied: regex!=2019.12.17 in /usr/local/lib/python3.7/dist-packages (from transformers) (2022.6.2)\n","Requirement already satisfied: tqdm>=4.27 in /usr/local/lib/python3.7/dist-packages (from transformers) (4.64.1)\n","Requirement already satisfied: numpy>=1.17 in /usr/local/lib/python3.7/dist-packages (from transformers) (1.21.6)\n","Requirement already satisfied: importlib-metadata in /usr/local/lib/python3.7/dist-packages (from transformers) (4.13.0)\n","Requirement already satisfied: filelock in /usr/local/lib/python3.7/dist-packages (from transformers) (3.8.0)\n","Requirement already satisfied: typing-extensions>=3.7.4.3 in /usr/local/lib/python3.7/dist-packages (from huggingface-hub<1.0,>=0.10.0->transformers) (4.1.1)\n","Requirement already satisfied: pyparsing!=3.0.5,>=2.0.2 in /usr/local/lib/python3.7/dist-packages (from packaging>=20.0->transformers) (3.0.9)\n","Requirement already satisfied: zipp>=0.5 in /usr/local/lib/python3.7/dist-packages (from importlib-metadata->transformers) (3.10.0)\n","Requirement already satisfied: urllib3!=1.25.0,!=1.25.1,<1.26,>=1.21.1 in /usr/local/lib/python3.7/dist-packages (from requests->transformers) (1.25.11)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.7/dist-packages (from requests->transformers) (2022.9.24)\n","Requirement already satisfied: chardet<4,>=3.0.2 in /usr/local/lib/python3.7/dist-packages (from requests->transformers) (3.0.4)\n","Requirement already satisfied: idna<3,>=2.5 in /usr/local/lib/python3.7/dist-packages (from requests->transformers) (2.10)\n","Installing collected packages: tokenizers, huggingface-hub, transformers\n","Successfully installed huggingface-hub-0.11.1 tokenizers-0.13.2 transformers-4.24.0\n"]}],"source":["%%bash\n","pip install tqdm boto3 requests regex sentencepiece sacremoses \n","pip install transformers\n"]},{"cell_type":"code","execution_count":6,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":220,"referenced_widgets":["5844c9c5b01a4f5283fca377a753e955","4dddd9a23012443299821be85efdfbc2","81143ebc6ad04c378bce541c23f4c774","15d21ec243554df085d0e25fa5e3ff83","875f226ed9e44c51b3e9e2d9d39e0540","e725b52db3e448269b5f335dd1fad8ec","db1e7cdbf3ed43e0b951e4a798a269ca","99fe2cc469a64b3daa8ad906457a9544","3051f6f5468b404c9094ecfae6f49e89","e1e1ebba14d04d5cb641400505ffd0da","f228b003d2f04207ac593f0ba79e5a82","5021720d8f9c45979190e67a694193a1","be71153516b14e07a78d2e5450936528","093c22707bfe422b927d57ed80f1c3dd","c0ec2de411ef48148daad5aed954a1e7","47eee67f6dfe42408b575333f6e1ad02","619e3cf597144f5cb75be2d3d60fb4ea","d26d6b2527a1449bbf39878929a42fec","b1ebdfc268634ed296db403f8789aa4f","0fcd2d561c0d4f03907568452af5531f","d2faa04da4784760aa84cc7152e0e397","ebbc71265ebd418cbd6441280645f2eb","1996c99df3684c838f82961ea68348e6","adada5d4cd6e42a9a2b940414ddcf238","feb738f084a74197a25fa656f4a8f4a1","2056ae4e4e8b46f6aacf166097e8e457","3646181122a74e32865bb086e23d8f3a","418ef37da9ad48a08a5dd31a330cce5a","0860f7526a0d47fa97a57c62d7de4999","9fce43d82bc4489c8cafd6fafbf5dcdb","c900bd4817524eb9a2bb8b1512be569e","685f79959fd94120bbe3cfb3101998da","5c8e2b353a2445caa65be109e98e2701","e1727bbc8a2e4bbfb4cb5db40f3bfb19","b5807469fee84da29eca0f2a7fa4d1e8","9d14dd57973a4a03aaa0bd41ff3d9fdf","f2643c44df4a4a9e9ab1b0a07266147a","bc02b4ed5ca3439d841256071119701c","664f4783d116454aacf90fecc4fc3416","5d63ca2ebb53403b9a064e18922e374a","3b17a232f34d4fb4920ac3aa7b8ace8f","a2fc5cc9083042ca8bfacbb286066764","8cade570b0eb48f89880e7f7ab345931","35070d8a56d947e49bf5c7e7ac2a621b"]},"executionInfo":{"elapsed":27080,"status":"ok","timestamp":1669783478165,"user":{"displayName":"Fan Chung Hung","userId":"00184248906926987457"},"user_tz":480},"id":"FaEJze5Mj-Ik","outputId":"431ed269-73a0-4e78-f27d-ecd6e9ea0c39"},"outputs":[{"output_type":"display_data","data":{"text/plain":["Downloading:   0%|          | 0.00/232k [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"5844c9c5b01a4f5283fca377a753e955"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["Downloading:   0%|          | 0.00/28.0 [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"5021720d8f9c45979190e67a694193a1"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["Downloading:   0%|          | 0.00/570 [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"1996c99df3684c838f82961ea68348e6"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["Downloading:   0%|          | 0.00/440M [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"e1727bbc8a2e4bbfb4cb5db40f3bfb19"}},"metadata":{}},{"output_type":"stream","name":"stderr","text":["Some weights of the model checkpoint at bert-base-uncased were not used when initializing BertModel: ['cls.predictions.transform.dense.weight', 'cls.seq_relationship.bias', 'cls.predictions.decoder.weight', 'cls.predictions.bias', 'cls.seq_relationship.weight', 'cls.predictions.transform.LayerNorm.bias', 'cls.predictions.transform.LayerNorm.weight', 'cls.predictions.transform.dense.bias']\n","- This IS expected if you are initializing BertModel from the checkpoint of a model trained on another task or with another architecture (e.g. initializing a BertForSequenceClassification model from a BertForPreTraining model).\n","- This IS NOT expected if you are initializing BertModel from the checkpoint of a model that you expect to be exactly identical (initializing a BertForSequenceClassification model from a BertForSequenceClassification model).\n"]}],"source":["from transformers import BertTokenizer, BertModel\n","\n","bert_tokenizer = BertTokenizer.from_pretrained(\"bert-base-uncased\")\n","bert_model = BertModel.from_pretrained(\"bert-base-uncased\")"]},{"cell_type":"code","execution_count":7,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":109},"executionInfo":{"elapsed":14,"status":"ok","timestamp":1669783478166,"user":{"displayName":"Fan Chung Hung","userId":"00184248906926987457"},"user_tz":480},"id":"PNiKiWWHb3co","outputId":"1b8c99cf-4525-4215-9129-49aaea571015"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["'\\n# Pytorch built in GRU as part of piazza post @329\\nclass GRU(torch.nn.Module):\\n    def __init__(self, input_size, hidden_size, output_size):\\n        super().__init__()\\n        self.hidden_size = hidden_size\\n\\n        self.gru = torch.nn.GRU(input_size, hidden_size, 1)\\n      \\n        # Converts final layer for classification output (with softmax)\\n        self.output = torch.nn.Linear(hidden_size, output_size)\\n          \\n        return\\n    \\n    def forward(self,x,h):\\n                \\n        output,hidden = self.gru(x,h)       \\n        output = self.output(output)\\n        \\n        output = F.softmax(output)\\n        \\n        return output, hidden\\n\\n    def initHidden(self):\\n        return torch.zeros(1, self.hidden_size).cuda()\\n'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":7}],"source":["'''\n","# Pytorch built in GRU as part of piazza post @329\n","class GRU(torch.nn.Module):\n","    def __init__(self, input_size, hidden_size, output_size):\n","        super().__init__()\n","        self.hidden_size = hidden_size\n","\n","        self.gru = torch.nn.GRU(input_size, hidden_size, 1)\n","      \n","        # Converts final layer for classification output (with softmax)\n","        self.output = torch.nn.Linear(hidden_size, output_size)\n","          \n","        return\n","    \n","    def forward(self,x,h):\n","                \n","        output,hidden = self.gru(x,h)       \n","        output = self.output(output)\n","        \n","        output = F.softmax(output)\n","        \n","        return output, hidden\n","\n","    def initHidden(self):\n","        return torch.zeros(1, self.hidden_size).cuda()\n","'''"]},{"cell_type":"code","execution_count":7,"metadata":{"executionInfo":{"elapsed":11,"status":"ok","timestamp":1669783478166,"user":{"displayName":"Fan Chung Hung","userId":"00184248906926987457"},"user_tz":480},"id":"7E-MEjJ3OIl5"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":8,"metadata":{"executionInfo":{"elapsed":11,"status":"ok","timestamp":1669783478167,"user":{"displayName":"Fan Chung Hung","userId":"00184248906926987457"},"user_tz":480},"id":"uAEAEV-2fvK1"},"outputs":[],"source":["# Tokenization on articles by whitespace or non alpha-numeric (Keeps non-alpha numeric tokens)\n","def tokenize(article, keep_space = True):\n","  split = ''\n","  # Keeps all punctuation to leave the article untouched\n","  if keep_space:\n","    split = re.split('(\\W+)',article)\n","  # Splits on punctuation and removes it as well (may change what the article looks like)\n","  else:\n","    split = re.split('\\W+',article)\n","  return split\n","\n","# Tokenization to sentences to make use of bert sentence prediction\n","def sent_tokenize(article):\n","  return re.split('[\\.\\n]', article)\n","\n","def mask_tokens(tokens,mask_dict):\n","  masked_tokens = []\n","  for t in tokens:\n","    #print(t)\n","    if re.search('\\W+',t):\n","      masked_tokens.append(t)\n","    elif t in mask_dict:\n","      masked_tokens.append('[MASK]')    \n","    else:   \n","      masked_tokens.append(t)\n","\n","  return masked_tokens\n"]},{"cell_type":"code","execution_count":9,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"executionInfo":{"elapsed":10,"status":"ok","timestamp":1669783478167,"user":{"displayName":"Fan Chung Hung","userId":"00184248906926987457"},"user_tz":480},"id":"ykaiT7xnWZx_","outputId":"9c5cf077-1b65-4f03-b9bf-bc4fa07a9a9d"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["       class_1  class_2                              title  \\\n","0            0        0                       Architecture   \n","1            0        0                Sacral architecture   \n","2            0        1                           The arts   \n","3            0        1                                Art   \n","4            0        1                             Artist   \n","...        ...      ...                                ...   \n","10006        3       26               San José, Costa Rica   \n","10007        3       26                  Kingston, Jamaica   \n","10008        3       26                   Hyderabad, Sindh   \n","10009        3       26                   Syracuse, Sicily   \n","10010        6       61  William Thomson, 1st Baron Kelvin   \n","\n","                                                 content  \n","0      Architecture (from Latin  architectura; from A...  \n","1      Sacral architecture (also known as sacred arch...  \n","2      The arts are a very wide range of human practi...  \n","3      Art is a diverse range of human activity, and ...  \n","4      An artist is a person engaged in an activity r...  \n","...                                                  ...  \n","10006  San José (Spanish: [saŋ xoˈse]; meaning \"Saint...  \n","10007  Kingston is the capital and largest city of Ja...  \n","10008  Hyderabad (Sindhi and Urdu: حيدرآباد;  (listen...  \n","10009  Syracuse ( SIRR-ə-kewss, -⁠kewz; Italian: Sira...  \n","10010  William Thomson, 1st Baron Kelvin,  (26 June 1...  \n","\n","[10011 rows x 4 columns]"],"text/html":["\n","  <div id=\"df-103ee9b3-92b3-4478-8495-5e0c6106e4e1\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>class_1</th>\n","      <th>class_2</th>\n","      <th>title</th>\n","      <th>content</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>Architecture</td>\n","      <td>Architecture (from Latin  architectura; from A...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>Sacral architecture</td>\n","      <td>Sacral architecture (also known as sacred arch...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>The arts</td>\n","      <td>The arts are a very wide range of human practi...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>Art</td>\n","      <td>Art is a diverse range of human activity, and ...</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>Artist</td>\n","      <td>An artist is a person engaged in an activity r...</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>10006</th>\n","      <td>3</td>\n","      <td>26</td>\n","      <td>San José, Costa Rica</td>\n","      <td>San José (Spanish: [saŋ xoˈse]; meaning \"Saint...</td>\n","    </tr>\n","    <tr>\n","      <th>10007</th>\n","      <td>3</td>\n","      <td>26</td>\n","      <td>Kingston, Jamaica</td>\n","      <td>Kingston is the capital and largest city of Ja...</td>\n","    </tr>\n","    <tr>\n","      <th>10008</th>\n","      <td>3</td>\n","      <td>26</td>\n","      <td>Hyderabad, Sindh</td>\n","      <td>Hyderabad (Sindhi and Urdu: حيدرآباد;  (listen...</td>\n","    </tr>\n","    <tr>\n","      <th>10009</th>\n","      <td>3</td>\n","      <td>26</td>\n","      <td>Syracuse, Sicily</td>\n","      <td>Syracuse ( SIRR-ə-kewss, -⁠kewz; Italian: Sira...</td>\n","    </tr>\n","    <tr>\n","      <th>10010</th>\n","      <td>6</td>\n","      <td>61</td>\n","      <td>William Thomson, 1st Baron Kelvin</td>\n","      <td>William Thomson, 1st Baron Kelvin,  (26 June 1...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>10011 rows × 4 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-103ee9b3-92b3-4478-8495-5e0c6106e4e1')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-103ee9b3-92b3-4478-8495-5e0c6106e4e1 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-103ee9b3-92b3-4478-8495-5e0c6106e4e1');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":9}],"source":["article_data\n"]},{"cell_type":"code","execution_count":10,"metadata":{"executionInfo":{"elapsed":10,"status":"ok","timestamp":1669783478168,"user":{"displayName":"Fan Chung Hung","userId":"00184248906926987457"},"user_tz":480},"id":"ooqNRTj2iD9c"},"outputs":[],"source":["title_dict = article_data['title'].to_dict()\n","title_inv = {v: k for k, v in title_dict.items()}\n","max_title = article_data.shape[0]"]},{"cell_type":"code","execution_count":11,"metadata":{"executionInfo":{"elapsed":4998,"status":"ok","timestamp":1669783483157,"user":{"displayName":"Fan Chung Hung","userId":"00184248906926987457"},"user_tz":480},"id":"8Gk2F-nfhZLg"},"outputs":[],"source":["article_data['sentences'] = article_data['content'].apply(lambda x: sent_tokenize(str(x)))\n","article_data = article_data.to_numpy()\n"]},{"cell_type":"code","execution_count":12,"metadata":{"executionInfo":{"elapsed":7,"status":"ok","timestamp":1669783483157,"user":{"displayName":"Fan Chung Hung","userId":"00184248906926987457"},"user_tz":480},"id":"H_STZz_jfadO"},"outputs":[],"source":["model_path = '/content/gdrive/MyDrive/Final Dataset/wiki_model.pickle'\n","\n","\n","#Feedforward NN model\n","class FNN(torch.nn.Module):\n","    def __init__(self):\n","        super().__init__()\n","\n","        # BERT embeddings for CLS are usually 1x768 \n","        # Use first 30 sentences for classification\n","        self.linear = torch.nn.Linear(768*5,768*1)\n","        self.linear2 = torch.nn.Linear(768*1,768*1)\n","        \n","        # Output layer to predict article title\n","        self.output = torch.nn.Linear(768*1,max_title)\n","        \n","        return\n","    \n","    def forward(self,x):\n","        x = self.linear(x)\n","        x = F.relu(x)\n","        x = self.linear2(x)\n","        x = F.relu(x)\n","        x = self.output(x)\n","        x = F.softmax(x)\n","        return x\n"]},{"cell_type":"code","execution_count":12,"metadata":{"executionInfo":{"elapsed":7,"status":"ok","timestamp":1669783483158,"user":{"displayName":"Fan Chung Hung","userId":"00184248906926987457"},"user_tz":480},"id":"cH4ETFKhlQKe"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":13,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":36},"executionInfo":{"elapsed":7,"status":"ok","timestamp":1669783483158,"user":{"displayName":"Fan Chung Hung","userId":"00184248906926987457"},"user_tz":480},"id":"OtYZVWPnUoZV","outputId":"71d226fd-19a2-4afc-db09-5b781364b3ec"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["'\\nGRU_model = GRU(768,100,max_title)\\nGRU_loss = torch.nn.CrossEntropyLoss()\\nGRU_opt = torch.optim.SGD(GRU_model.parameters(), lr=0.01)#0.005\\n'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":13}],"source":["'''\n","GRU_model = GRU(768,100,max_title)\n","GRU_loss = torch.nn.CrossEntropyLoss()\n","GRU_opt = torch.optim.SGD(GRU_model.parameters(), lr=0.01)#0.005\n","'''"]},{"cell_type":"code","execution_count":14,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":478,"status":"ok","timestamp":1669783483631,"user":{"displayName":"Fan Chung Hung","userId":"00184248906926987457"},"user_tz":480},"id":"B-oXBFkaOUuk","outputId":"a977783f-ee92-4bc1-d6a9-ef42537c00a3"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["<All keys matched successfully>"]},"metadata":{},"execution_count":14}],"source":["FNN_model = FNN()\n","FNN_loss = torch.nn.CrossEntropyLoss()\n","FNN_opt = torch.optim.SGD(FNN_model.parameters(), lr=0.005)\n","\n","FNN_model.load_state_dict(torch.load(model_path))\n","#FNN_model.eval()\n","#FNN_model.state_dict()"]},{"cell_type":"code","execution_count":15,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":36},"executionInfo":{"elapsed":3,"status":"ok","timestamp":1669783483631,"user":{"displayName":"Fan Chung Hung","userId":"00184248906926987457"},"user_tz":480},"id":"6nXp540_o000","outputId":"ecdf7e5d-bc0b-4636-942d-cade3f77c987"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["'\\nif torch.cuda.is_available(): #use gpu if available\\n    #GRU_model.cuda()\\n    FNN_model.cuda()\\n'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":15}],"source":["'''\n","if torch.cuda.is_available(): #use gpu if available\n","    #GRU_model.cuda()\n","    FNN_model.cuda()\n","'''"]},{"cell_type":"code","execution_count":16,"metadata":{"executionInfo":{"elapsed":2,"status":"ok","timestamp":1669783483631,"user":{"displayName":"Fan Chung Hung","userId":"00184248906926987457"},"user_tz":480},"id":"l7MkOaCYtouP"},"outputs":[],"source":["import time\n","timeout = time.time() + 30*60"]},{"cell_type":"code","execution_count":19,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"7hVbSu97insz","executionInfo":{"status":"error","timestamp":1669783993783,"user_tz":480,"elapsed":478311,"user":{"displayName":"Fan Chung Hung","userId":"00184248906926987457"}},"outputId":"f9edf055-6f08-4d98-d026-80bd78f82904"},"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:25: UserWarning: Implicit dimension choice for softmax has been deprecated. Change the call to include dim=X as an argument.\n"]},{"output_type":"stream","name":"stdout","text":["tensor(9.2114, dtype=torch.float64, grad_fn=<DivBackward1>)\n","6.35489821434021\n","tensor(9.2115, dtype=torch.float64, grad_fn=<DivBackward1>)\n","4.248567342758179\n","tensor(9.2114, dtype=torch.float64, grad_fn=<DivBackward1>)\n","3.5731122493743896\n","tensor(9.2114, dtype=torch.float64, grad_fn=<DivBackward1>)\n","3.087536573410034\n","tensor(9.2114, dtype=torch.float64, grad_fn=<DivBackward1>)\n","3.017247200012207\n","tensor(9.2114, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.909891366958618\n","tensor(9.2114, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.877721071243286\n","tensor(9.2114, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.3573720455169678\n","tensor(9.2115, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.250742197036743\n","tensor(9.2115, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.1023287773132324\n","tensor(9.2114, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.4058589935302734\n","tensor(9.2115, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.382103204727173\n","tensor(9.2114, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.0275368690490723\n","tensor(9.2114, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.2016842365264893\n","tensor(9.2115, dtype=torch.float64, grad_fn=<DivBackward1>)\n","1.9871127605438232\n","tensor(9.2115, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.018287181854248\n","tensor(9.2115, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.1937811374664307\n","tensor(9.2115, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.5005345344543457\n","tensor(9.2114, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.1805152893066406\n","tensor(9.2115, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.291160821914673\n","tensor(9.2114, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.361248731613159\n","tensor(9.2114, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.1999828815460205\n","tensor(9.2114, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.0604939460754395\n","tensor(9.2114, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.534066677093506\n","tensor(9.2114, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.118443489074707\n","tensor(9.2114, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.1268327236175537\n","tensor(9.2115, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.0606417655944824\n","tensor(9.2114, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.676076650619507\n","tensor(9.2115, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.35990047454834\n","tensor(9.2114, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.143005847930908\n","tensor(9.2115, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.0262837409973145\n","tensor(9.2114, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.1793272495269775\n","tensor(9.2114, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.389521360397339\n","tensor(9.2114, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.593777656555176\n","tensor(9.2114, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.271334171295166\n","tensor(9.2114, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.2945497035980225\n","tensor(9.2114, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.1231331825256348\n","tensor(9.2115, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.7084732055664062\n","tensor(9.2115, dtype=torch.float64, grad_fn=<DivBackward1>)\n","3.331406354904175\n","tensor(9.2115, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.5754201412200928\n","tensor(9.2115, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.0427565574645996\n","tensor(9.2114, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.2002904415130615\n","tensor(9.2114, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.271841049194336\n","tensor(9.2115, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.587165117263794\n","tensor(9.2114, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.221052408218384\n","tensor(9.2115, dtype=torch.float64, grad_fn=<DivBackward1>)\n","1.931586503982544\n","tensor(9.2114, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.1309151649475098\n","tensor(9.2115, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.0954439640045166\n","tensor(9.2114, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.1019933223724365\n","tensor(9.2115, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.2095770835876465\n","tensor(9.2115, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.173097848892212\n","tensor(9.2114, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.289106845855713\n","tensor(9.2115, dtype=torch.float64, grad_fn=<DivBackward1>)\n","1.9918081760406494\n","tensor(9.2114, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.042102575302124\n","tensor(9.2114, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.143383502960205\n","tensor(9.2115, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.120225667953491\n","tensor(9.2114, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.439408779144287\n","tensor(9.2115, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.4979605674743652\n","tensor(9.2115, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.2782199382781982\n","tensor(9.2115, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.1774730682373047\n","tensor(9.2115, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.3068466186523438\n","tensor(9.2115, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.167175531387329\n","tensor(9.2115, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.230226755142212\n","tensor(9.2114, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.243989944458008\n","tensor(9.2114, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.7988569736480713\n","tensor(9.2115, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.166039228439331\n","tensor(9.2115, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.7618298530578613\n","tensor(9.2115, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.7364654541015625\n","tensor(9.2114, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.085163116455078\n","tensor(9.2114, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.288489818572998\n","tensor(9.2115, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.4212703704833984\n","tensor(9.2114, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.3688619136810303\n","tensor(9.2114, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.133777379989624\n","tensor(9.2114, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.468959331512451\n","tensor(9.2114, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.0590248107910156\n","tensor(9.2114, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.136904001235962\n","tensor(9.2114, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.3047471046447754\n","tensor(9.2115, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.2647926807403564\n","tensor(9.2114, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.1827502250671387\n","tensor(9.2114, dtype=torch.float64, grad_fn=<DivBackward1>)\n","1.9789531230926514\n","tensor(9.2114, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.1513168811798096\n","tensor(9.2114, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.622925043106079\n","tensor(9.2114, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.131074905395508\n","tensor(9.2115, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.1638431549072266\n","tensor(9.2114, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.1355793476104736\n","tensor(9.2115, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.9281678199768066\n","tensor(9.2114, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.0329198837280273\n","tensor(9.2114, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.571959972381592\n","tensor(9.2115, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.9617974758148193\n","tensor(9.2115, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.0277762413024902\n","tensor(9.2115, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.3464887142181396\n","tensor(9.2115, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.016439199447632\n","tensor(9.2114, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.31077241897583\n","tensor(9.2114, dtype=torch.float64, grad_fn=<DivBackward1>)\n","1.9854192733764648\n","tensor(9.2115, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.2917320728302\n","tensor(9.2115, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.223447322845459\n","tensor(9.2114, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.584577798843384\n","tensor(9.2115, dtype=torch.float64, grad_fn=<DivBackward1>)\n","1.748396873474121\n","tensor(9.2114, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.22477388381958\n","tensor(9.2114, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.0542869567871094\n","tensor(9.2114, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.235013246536255\n","tensor(9.2115, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.1754002571105957\n","tensor(9.2115, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.2121551036834717\n","tensor(9.2114, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.083266019821167\n","tensor(9.2115, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.097494125366211\n","tensor(9.2115, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.3215062618255615\n","tensor(9.2115, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.2296371459960938\n","tensor(9.2114, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.154265880584717\n","tensor(9.2114, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.099555253982544\n","tensor(9.2115, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.2719786167144775\n","tensor(9.2114, dtype=torch.float64, grad_fn=<DivBackward1>)\n","1.9700753688812256\n","tensor(9.2115, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.264601707458496\n","tensor(9.2115, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.459611415863037\n","tensor(9.2114, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.2522668838500977\n","tensor(9.2115, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.3379173278808594\n","tensor(9.2115, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.432116746902466\n","tensor(9.2115, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.4247376918792725\n","tensor(9.2115, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.3285446166992188\n","tensor(9.2115, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.2860686779022217\n","tensor(9.2115, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.550994396209717\n","tensor(9.2115, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.2043840885162354\n","tensor(9.2115, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.695939302444458\n","tensor(9.2114, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.3219025135040283\n","tensor(9.2115, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.3170807361602783\n","tensor(9.2114, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.1769559383392334\n","tensor(9.2115, dtype=torch.float64, grad_fn=<DivBackward1>)\n","1.850858449935913\n","tensor(9.2114, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.293912172317505\n","tensor(9.2114, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.0396289825439453\n","tensor(9.2115, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.665219783782959\n","tensor(9.2114, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.2516543865203857\n","tensor(9.2115, dtype=torch.float64, grad_fn=<DivBackward1>)\n","1.970672607421875\n","tensor(9.2115, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.1906611919403076\n","tensor(9.2114, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.4113147258758545\n","tensor(9.2115, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.5151965618133545\n","tensor(9.2114, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.2357523441314697\n","tensor(9.2114, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.308192491531372\n","tensor(9.2114, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.1575465202331543\n","tensor(9.2114, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.4236137866973877\n","tensor(9.2114, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.2394425868988037\n","tensor(9.2115, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.597203493118286\n","tensor(9.2115, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.224743127822876\n","tensor(9.2114, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.124687671661377\n","tensor(9.2114, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.871168851852417\n","tensor(9.2114, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.4050002098083496\n","tensor(9.2114, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.222301483154297\n","tensor(9.2115, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.287273645401001\n","tensor(9.2115, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.53798246383667\n","tensor(9.2114, dtype=torch.float64, grad_fn=<DivBackward1>)\n","1.9702558517456055\n","tensor(9.2114, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.183974504470825\n","tensor(9.2114, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.1014041900634766\n","tensor(9.2114, dtype=torch.float64, grad_fn=<DivBackward1>)\n","1.9756202697753906\n","tensor(9.2115, dtype=torch.float64, grad_fn=<DivBackward1>)\n","1.9090139865875244\n","tensor(9.2115, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.5582010746002197\n","tensor(9.2115, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.501643657684326\n","tensor(9.2115, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.014556646347046\n","tensor(9.2115, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.5247395038604736\n","tensor(9.2115, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.1359312534332275\n","tensor(9.2115, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.1865622997283936\n","tensor(9.2114, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.6375811100006104\n","tensor(9.2115, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.0658483505249023\n","tensor(9.2115, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.080186128616333\n","tensor(9.2114, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.283050537109375\n","tensor(9.2115, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.200493812561035\n","tensor(9.2115, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.100372314453125\n","tensor(9.2115, dtype=torch.float64, grad_fn=<DivBackward1>)\n","1.9029436111450195\n","tensor(9.2115, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.100792407989502\n","tensor(9.2114, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.2373974323272705\n","tensor(9.2115, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.219236373901367\n","tensor(9.2114, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.0894570350646973\n","tensor(9.2114, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.5201961994171143\n","tensor(9.2114, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.254789352416992\n","tensor(9.2114, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.4311251640319824\n","tensor(9.2115, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.2806568145751953\n","tensor(9.2114, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.0087616443634033\n","tensor(9.2115, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.4667418003082275\n","tensor(9.2114, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.2675302028656006\n","tensor(9.2115, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.021636724472046\n","tensor(9.2114, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.443053960800171\n","tensor(9.2114, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.6538984775543213\n","tensor(9.2115, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.5512425899505615\n","tensor(9.2114, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.2372841835021973\n","tensor(9.2115, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.3643319606781006\n","tensor(9.2115, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.174436092376709\n","tensor(9.2114, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.375253438949585\n","tensor(9.2115, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.060044527053833\n","tensor(9.2115, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.1370277404785156\n","tensor(9.2115, dtype=torch.float64, grad_fn=<DivBackward1>)\n","1.898768663406372\n","tensor(9.2114, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.2450718879699707\n","tensor(9.2114, dtype=torch.float64, grad_fn=<DivBackward1>)\n","1.8923242092132568\n","tensor(9.2114, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.2538905143737793\n","tensor(9.2115, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.1621651649475098\n","tensor(9.2114, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.2099099159240723\n","tensor(9.2115, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.0032832622528076\n","tensor(9.2115, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.2597053050994873\n","tensor(9.2115, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.12399959564209\n","tensor(9.2115, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.659013032913208\n","tensor(9.2114, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.2171790599823\n","tensor(9.2115, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.2603538036346436\n","tensor(9.2114, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.5061278343200684\n","tensor(9.2114, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.3028829097747803\n","tensor(9.2115, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.2601492404937744\n","tensor(9.2115, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.179121494293213\n","tensor(9.2114, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.341522455215454\n","tensor(9.2115, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.357734203338623\n","tensor(9.2114, dtype=torch.float64, grad_fn=<DivBackward1>)\n","2.4464237689971924\n"]},{"output_type":"error","ename":"KeyboardInterrupt","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)","\u001b[0;32m<ipython-input-19-d83b1a2e65fe>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m     35\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     36\u001b[0m         \u001b[0mloss\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mFNN_loss\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mprediction\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0monehot_label\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 37\u001b[0;31m         \u001b[0mloss\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mbackward\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     38\u001b[0m         \u001b[0mFNN_opt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mstep\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     39\u001b[0m         \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mloss\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/torch/_tensor.py\u001b[0m in \u001b[0;36mbackward\u001b[0;34m(self, gradient, retain_graph, create_graph, inputs)\u001b[0m\n\u001b[1;32m    394\u001b[0m                 \u001b[0mcreate_graph\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcreate_graph\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    395\u001b[0m                 inputs=inputs)\n\u001b[0;32m--> 396\u001b[0;31m         \u001b[0mtorch\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mautograd\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mbackward\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mgradient\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mretain_graph\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcreate_graph\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0minputs\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0minputs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    397\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    398\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mregister_hook\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mhook\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/torch/autograd/__init__.py\u001b[0m in \u001b[0;36mbackward\u001b[0;34m(tensors, grad_tensors, retain_graph, create_graph, grad_variables, inputs)\u001b[0m\n\u001b[1;32m    173\u001b[0m     Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass\n\u001b[1;32m    174\u001b[0m         \u001b[0mtensors\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mgrad_tensors_\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mretain_graph\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcreate_graph\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0minputs\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 175\u001b[0;31m         allow_unreachable=True, accumulate_grad=True)  # Calls into the C++ engine to run the backward pass\n\u001b[0m\u001b[1;32m    176\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    177\u001b[0m def grad(\n","\u001b[0;31mKeyboardInterrupt\u001b[0m: "]}],"source":["# Training loop for model\n","for epoch in range(0,1):\n","    mask_dict = {}\n","    for class_1,class_2,title,content,sentences in article_data:\n","        article_time_start = time.time()\n","\n","        # add title to mask dict to cover it in all sentences\n","        mask_dict[title] = None\n","        FNN_opt.zero_grad()\n","\n","        #hidden = GRU_model.initHidden()\n","\n","        stack_embeddings = []\n","\n","        for sentence in sentences[0:5]:\n","            masked_sentence = ''.join(mask_tokens(tokenize(sentence),mask_dict))\n","            bert_tokens = bert_tokenizer(masked_sentence, return_tensors='pt')\n","            sentence_embeddings = bert_model(**bert_tokens)\n","            #for sentence in sentence_embeddings:\n","            cls_embedding = sentence_embeddings[0][:,0]\n","\n","            stack_embeddings += cls_embedding\n","\n","        article_embeddings = torch.cat(stack_embeddings)\n","\n","        prediction = FNN_model(article_embeddings)\n","\n","        \n","        # Numpy hacking to get one-hot version of labels\n","        label = title_inv[title]\n","        onehot_label = np.zeros(max_title)\n","        onehot_label[label] = 1\n","        #onehot_label = np.expand_dims(onehot_label,axis=0)\n","        onehot_label = torch.from_numpy(onehot_label)\n","\n","        loss = FNN_loss(prediction,onehot_label)\n","        loss.backward()\n","        FNN_opt.step()\n","        print(loss)\n","        article_time_end = time.time()\n","        print(article_time_end - article_time_start)\n","\n","        '''\n","        for sentence in sentences:\n","            masked_sentence = ''.join(mask_tokens(tokenize(sentence),mask_dict))\n","            bert_tokens = bert_tokenizer(masked_sentence, return_tensors='pt')\n","            sentence_embeddings = bert_model(**bert_tokens)\n","\n","            #for sentence in sentence_embeddings:\n","            cls_embedding = sentence_embeddings[0][:,0].cuda()\n","\n","            prediction, hidden = GRU_model(cls_embedding,hidden)\n","            break\n","\n","\n","        # Numpy hacking to get one-hot version of labels\n","        label = title_inv[title]\n","        onehot_label = np.zeros(max_title)\n","        onehot_label[label] = 1\n","        onehot_label = np.expand_dims(onehot_label,axis=0)\n","        onehot_label = torch.from_numpy(onehot_label).cuda()\n","        \n","        # Loss and opt step\n","        loss = GRU_loss(prediction,onehot_label)\n","        loss.backward()\n","        print(loss)\n","        GRU_opt.step()\n","        '''\n","\n","        if time.time() > timeout:\n","            break\n","    \n","    if time.time() > timeout:\n","      break\n","\n"]},{"cell_type":"code","execution_count":null,"metadata":{"executionInfo":{"elapsed":10,"status":"aborted","timestamp":1669783502479,"user":{"displayName":"Fan Chung Hung","userId":"00184248906926987457"},"user_tz":480},"id":"nyTLq4aIyOBr"},"outputs":[],"source":["torch.save(FNN_model.state_dict(), model_path)"]},{"cell_type":"code","execution_count":null,"metadata":{"executionInfo":{"elapsed":9,"status":"aborted","timestamp":1669783502479,"user":{"displayName":"Fan Chung Hung","userId":"00184248906926987457"},"user_tz":480},"id":"KPXuLPVyheF2"},"outputs":[],"source":["article_data.shape"]},{"cell_type":"code","execution_count":null,"metadata":{"executionInfo":{"elapsed":10,"status":"aborted","timestamp":1669783502480,"user":{"displayName":"Fan Chung Hung","userId":"00184248906926987457"},"user_tz":480},"id":"3y9_2rXThxUn"},"outputs":[],"source":["article_data[0][4][0]"]},{"cell_type":"code","execution_count":null,"metadata":{"executionInfo":{"elapsed":10,"status":"aborted","timestamp":1669783502480,"user":{"displayName":"Fan Chung Hung","userId":"00184248906926987457"},"user_tz":480},"id":"mK0PyW0kWAxO"},"outputs":[],"source":["#article_data['sentences'] = article_data['content'].apply(lambda x: sent_tokenize(str(x)))\n","#article_data['tokens'] = article_data['sentences'].apply(lambda x: tokenize(str(x),keep_space = False))\n"]},{"cell_type":"code","execution_count":null,"metadata":{"executionInfo":{"elapsed":10,"status":"aborted","timestamp":1669783502480,"user":{"displayName":"Fan Chung Hung","userId":"00184248906926987457"},"user_tz":480},"id":"-KgsuDL4f8Io"},"outputs":[],"source":["#test = article_data.head(1)\n","#test"]},{"cell_type":"code","execution_count":null,"metadata":{"executionInfo":{"elapsed":9,"status":"aborted","timestamp":1669783502480,"user":{"displayName":"Fan Chung Hung","userId":"00184248906926987457"},"user_tz":480},"id":"drLlJoWIgt3g"},"outputs":[],"source":["#test['tokens'][0]"]}],"metadata":{"accelerator":"GPU","colab":{"provenance":[]},"gpuClass":"standard","kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"},"widgets":{"application/vnd.jupyter.widget-state+json":{"5844c9c5b01a4f5283fca377a753e955":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_4dddd9a23012443299821be85efdfbc2","IPY_MODEL_81143ebc6ad04c378bce541c23f4c774","IPY_MODEL_15d21ec243554df085d0e25fa5e3ff83"],"layout":"IPY_MODEL_875f226ed9e44c51b3e9e2d9d39e0540"}},"4dddd9a23012443299821be85efdfbc2":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_e725b52db3e448269b5f335dd1fad8ec","placeholder":"​","style":"IPY_MODEL_db1e7cdbf3ed43e0b951e4a798a269ca","value":"Downloading: 100%"}},"81143ebc6ad04c378bce541c23f4c774":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_99fe2cc469a64b3daa8ad906457a9544","max":231508,"min":0,"orientation":"horizontal","style":"IPY_MODEL_3051f6f5468b404c9094ecfae6f49e89","value":231508}},"15d21ec243554df085d0e25fa5e3ff83":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_e1e1ebba14d04d5cb641400505ffd0da","placeholder":"​","style":"IPY_MODEL_f228b003d2f04207ac593f0ba79e5a82","value":" 232k/232k [00:00&lt;00:00, 610kB/s]"}},"875f226ed9e44c51b3e9e2d9d39e0540":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"e725b52db3e448269b5f335dd1fad8ec":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"db1e7cdbf3ed43e0b951e4a798a269ca":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"99fe2cc469a64b3daa8ad906457a9544":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"3051f6f5468b404c9094ecfae6f49e89":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"e1e1ebba14d04d5cb641400505ffd0da":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"f228b003d2f04207ac593f0ba79e5a82":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"5021720d8f9c45979190e67a694193a1":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_be71153516b14e07a78d2e5450936528","IPY_MODEL_093c22707bfe422b927d57ed80f1c3dd","IPY_MODEL_c0ec2de411ef48148daad5aed954a1e7"],"layout":"IPY_MODEL_47eee67f6dfe42408b575333f6e1ad02"}},"be71153516b14e07a78d2e5450936528":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_619e3cf597144f5cb75be2d3d60fb4ea","placeholder":"​","style":"IPY_MODEL_d26d6b2527a1449bbf39878929a42fec","value":"Downloading: 100%"}},"093c22707bfe422b927d57ed80f1c3dd":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_b1ebdfc268634ed296db403f8789aa4f","max":28,"min":0,"orientation":"horizontal","style":"IPY_MODEL_0fcd2d561c0d4f03907568452af5531f","value":28}},"c0ec2de411ef48148daad5aed954a1e7":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_d2faa04da4784760aa84cc7152e0e397","placeholder":"​","style":"IPY_MODEL_ebbc71265ebd418cbd6441280645f2eb","value":" 28.0/28.0 [00:00&lt;00:00, 943B/s]"}},"47eee67f6dfe42408b575333f6e1ad02":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"619e3cf597144f5cb75be2d3d60fb4ea":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"d26d6b2527a1449bbf39878929a42fec":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"b1ebdfc268634ed296db403f8789aa4f":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"0fcd2d561c0d4f03907568452af5531f":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"d2faa04da4784760aa84cc7152e0e397":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"ebbc71265ebd418cbd6441280645f2eb":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"1996c99df3684c838f82961ea68348e6":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_adada5d4cd6e42a9a2b940414ddcf238","IPY_MODEL_feb738f084a74197a25fa656f4a8f4a1","IPY_MODEL_2056ae4e4e8b46f6aacf166097e8e457"],"layout":"IPY_MODEL_3646181122a74e32865bb086e23d8f3a"}},"adada5d4cd6e42a9a2b940414ddcf238":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_418ef37da9ad48a08a5dd31a330cce5a","placeholder":"​","style":"IPY_MODEL_0860f7526a0d47fa97a57c62d7de4999","value":"Downloading: 100%"}},"feb738f084a74197a25fa656f4a8f4a1":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_9fce43d82bc4489c8cafd6fafbf5dcdb","max":570,"min":0,"orientation":"horizontal","style":"IPY_MODEL_c900bd4817524eb9a2bb8b1512be569e","value":570}},"2056ae4e4e8b46f6aacf166097e8e457":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_685f79959fd94120bbe3cfb3101998da","placeholder":"​","style":"IPY_MODEL_5c8e2b353a2445caa65be109e98e2701","value":" 570/570 [00:00&lt;00:00, 16.7kB/s]"}},"3646181122a74e32865bb086e23d8f3a":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"418ef37da9ad48a08a5dd31a330cce5a":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"0860f7526a0d47fa97a57c62d7de4999":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"9fce43d82bc4489c8cafd6fafbf5dcdb":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"c900bd4817524eb9a2bb8b1512be569e":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"685f79959fd94120bbe3cfb3101998da":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"5c8e2b353a2445caa65be109e98e2701":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"e1727bbc8a2e4bbfb4cb5db40f3bfb19":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_b5807469fee84da29eca0f2a7fa4d1e8","IPY_MODEL_9d14dd57973a4a03aaa0bd41ff3d9fdf","IPY_MODEL_f2643c44df4a4a9e9ab1b0a07266147a"],"layout":"IPY_MODEL_bc02b4ed5ca3439d841256071119701c"}},"b5807469fee84da29eca0f2a7fa4d1e8":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_664f4783d116454aacf90fecc4fc3416","placeholder":"​","style":"IPY_MODEL_5d63ca2ebb53403b9a064e18922e374a","value":"Downloading: 100%"}},"9d14dd57973a4a03aaa0bd41ff3d9fdf":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_3b17a232f34d4fb4920ac3aa7b8ace8f","max":440473133,"min":0,"orientation":"horizontal","style":"IPY_MODEL_a2fc5cc9083042ca8bfacbb286066764","value":440473133}},"f2643c44df4a4a9e9ab1b0a07266147a":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_8cade570b0eb48f89880e7f7ab345931","placeholder":"​","style":"IPY_MODEL_35070d8a56d947e49bf5c7e7ac2a621b","value":" 440M/440M [00:18&lt;00:00, 33.2MB/s]"}},"bc02b4ed5ca3439d841256071119701c":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"664f4783d116454aacf90fecc4fc3416":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"5d63ca2ebb53403b9a064e18922e374a":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"3b17a232f34d4fb4920ac3aa7b8ace8f":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"a2fc5cc9083042ca8bfacbb286066764":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"8cade570b0eb48f89880e7f7ab345931":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"35070d8a56d947e49bf5c7e7ac2a621b":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}}}}},"nbformat":4,"nbformat_minor":0}